version: '3.8'

services:
  # -------------------------------
  # Your CameraGuardAI service
  # -------------------------------
  camera-guard:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - MQTT_HOST=${MQTT_HOST}
      - MQTT_PORT=${MQTT_PORT}
      - MQTT_TOPIC_PREFIX=${CAMERAGUARD_MQTT_TOPIC}
      - MQTT_CLIENT_ID=camera-guard
      - MQTT_USER=${MQTT_USER}
      - MQTT_PASS=${MQTT_PASS}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${DB_HOST}
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_PORT=${DB_PORT}
      - JWT_SECRET=${JWT_SECRET}
      - SERVICE_ROLE_KEY=${SERVICE_ROLE_KEY}
      - SUPABASE_URL=${SUPABASE_URL}
      - FRIGATE_API_URL=http://10.0.1.50:5000
    volumes:
      - ./src:/app/src
    ports:
      - "3000:3000"
    networks:
      - cameraguard-network
    restart: unless-stopped

  # -------------------------------
  # Next.js application
  # -------------------------------
  camera-guard-app:
    build:
      context: .
      dockerfile: Dockerfile.app
      args:
        - SUPABASE_URL=${SUPABASE_URL}
        - SERVICE_ROLE_KEY=${SERVICE_ROLE_KEY}
        - ANON_KEY=${ANON_KEY}
    environment:
      - MQTT_HOST=${MQTT_HOST}
      - MQTT_PORT=${MQTT_PORT}
      - MQTT_TOPIC_PREFIX=${CAMERAGUARD_MQTT_TOPIC}
      - MQTT_CLIENT_ID=camera-guard-app
      - MQTT_USER=${MQTT_USER}
      - MQTT_PASS=${MQTT_PASS}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${DB_HOST}
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_PORT=${DB_PORT}
      - JWT_SECRET=${JWT_SECRET}
      - SERVICE_ROLE_KEY=${SERVICE_ROLE_KEY}
      - ANON_KEY=${ANON_KEY}
      - SUPABASE_URL=${SUPABASE_URL}
    volumes:
      - ./src:/app/src
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    ports:
      - "3001:3000"
    networks:
      - cameraguard-network
    restart: unless-stopped

  # -------------------------------
  # Lizi AI Alert Agent
  # -------------------------------
  lizi:
    build:
      context: .
      dockerfile: Dockerfile.lizi
    environment:
      - SUPABASE_URL=${SUPABASE_URL}
      - SERVICE_ROLE_KEY=${SERVICE_ROLE_KEY}
      - MQTT_HOST=${MQTT_HOST}
      - MQTT_PORT=${MQTT_PORT}
      - MQTT_USER=${MQTT_USER}
      - MQTT_PASS=${MQTT_PASS}
    volumes:
      - ./src:/app/src
      - /var/run/docker.sock:/var/run/docker.sock
      - lizi-logs:/app/logs
    command: python3 /app/src/lizi.py
    networks:
      - cameraguard-network
    restart: unless-stopped

  # -------------------------------
  # Lizi API Service
  # -------------------------------
  lizi-api:
    build:
      context: .
      dockerfile: Dockerfile.lizi
    environment:
      - SUPABASE_URL=${SUPABASE_URL}
      - SERVICE_ROLE_KEY=${SERVICE_ROLE_KEY}
    volumes:
      - ./src:/app/src
      - /var/run/docker.sock:/var/run/docker.sock
      - lizi-logs:/app/logs
    command: python3 /app/src/lizi_api.py
    ports:
      - "5001:5000"
    networks:
      - cameraguard-network
    restart: unless-stopped
    user: root

networks:
  cameraguard-network:
    driver: bridge

volumes:
  lizi-logs:
